{"name":"CQ_Analytics.SegmentMgr","doc":"The CQ_Analytics.SegmentMgr object is a singleton providing methods for registration and resoluti...","configs":[],"props":[],"methods":[{"name":"SegmentMgr.loadSegments","doc":"&lt;static&gt; Loads the segments at URL: path + \".segment.js\".\nFires \"segmentsload\" event."},{"name":"SegmentMgr.renderer","doc":"&lt;static&gt; Renders the current segments found in the SegmentMgr store. Rendering is appended ..."},{"name":"addInitProperty","doc":"Adds an initial property to the store."},{"name":"addListener","doc":"Appends an event handler to the current Observable."},{"name":"clear","doc":"Clears the store."},{"name":"getBoost","doc":"Returns the boost of a segment."},{"name":"getData","doc":"Returns the store data."},{"name":"getInitProperty","doc":"Returns the value of an initial property."},{"name":"getLabel","doc":"Returns a store property friendly label."},{"name":"getLink","doc":"Returns a store property in a link format."},{"name":"getMaxBoost","doc":"Returns the max boost of an array of segments. Segment must resolve the given clientcontext."},{"name":"getName","doc":"Returns the store name."},{"name":"getProperty","doc":"Returns the value of a store property (XSS filtered value)."},{"name":"getPropertyNames","doc":"Returns all store property names."},{"name":"getResolved","doc":"Returns all resolving segments for the given clientcontext."},{"name":"getSessionStore","doc":"Returns the session store attached to the current object (returns this)."},{"name":"init","doc":"Initializes the store."},{"name":"isInitialized","doc":"Returns true if the store is initialized. False otherwise."},{"name":"loadInitProperties","doc":"Loads initial properties from an object."},{"name":"register","doc":"Registers a segment."},{"name":"reload","doc":"Reloads the given segment."},{"name":"removeListener","doc":"Removes an event handler from the current Observable."},{"name":"removeProperty","doc":"Removes a property from the store."},{"name":"reset","doc":"Resets the store: restores initial values."},{"name":"resolve","doc":"Resolves a segment. Tries to eval the rule of the segment the given clientcontext object."},{"name":"resolveArray","doc":"Resolves an array of segments. Resolution depends on operator:\noperator is AND: success if all se..."},{"name":"setProperties","doc":"Sets the value of multiple properties"},{"name":"setProperty","doc":"Sets the value of a property."},{"name":"setSuppressEvents","doc":"Sets the value of the suppressEvents property"}],"events":[]}