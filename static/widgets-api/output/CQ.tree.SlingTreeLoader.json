{"name":"CQ.tree.SlingTreeLoader","doc":"A tree loader that uses the standard Sling json view of the repository\nto build an Ext tree.","configs":[{"name":"baseAttrs","doc":"(optional) An object containing attributes to be added to all nodes created by this loader. If th..."},{"name":"baseParams","doc":"(optional) An object containing properties which specify HTTP parameters to be passed to each req..."},{"name":"clearOnLoad","doc":"(optional) Default to true. Remove previously existing child nodes before loading."},{"name":"dataUrl","doc":"The URL from which to request a Json string which specifies an array of node definition objects r..."},{"name":"directFn","doc":"Function to call when executing a request."},{"name":"filterFn","doc":"Custom filter function for filtering child nodes. This is being called with (String name, Object ..."},{"name":"nameExcludes","doc":"List of node names to exclude from being shown in the tree. Defaults to [\"rep:policy\"]."},{"name":"nodeParameter","doc":"The name of the parameter sent to the server which contains the identifier of the node. Defaults ..."},{"name":"paramOrder","doc":"Defaults to undefined. Only used when using directFn. Specifies the params in the order in which ..."},{"name":"paramsAsHash","doc":"Only used when using directFn. Send parameters as a collection of named arguments (defaults to fa..."},{"name":"path","doc":"Base repository path for the tree. Defaults to the root \"\/\"."},{"name":"preloadChildren","doc":"If set to true, the loader recursively loads \"children\" attributes when doing the first load on n..."},{"name":"qtipProperty","doc":"Name of the JCR property that should be used as qtip for the node. Defaults to \"jcr:description\"."},{"name":"requestMethod","doc":"The HTTP request method for loading data (defaults to the value of CQ.Ext.Ajax.method)."},{"name":"titleProperty","doc":"Name of the JCR property that should be used as title for the node. Defaults to \"jcr:title\"."},{"name":"typeExcludes","doc":"List of node types and\/or resource types to exclude from being shown in the tree."},{"name":"typeIncludes","doc":"List of node types and\/or resource types to include. This has only effect if this array contains ..."},{"name":"uiProviders","doc":"(optional) An object containing properties which specify custom CQ.Ext.tree.TreeNodeUI implementa..."},{"name":"url","doc":"Equivalent to dataUrl."}],"props":[],"methods":[{"name":"createNode","doc":"Override this function for custom TreeNode node implementation, or to\nmodify the attributes at cr..."},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"getQtip","doc":"Returns the qtip to be used for the tree node. The default implementation\nwill look for a qtipPro..."},{"name":"getTitle","doc":"Returns the title to be used for the tree node. The default implementation\nwill look for a titleP..."},{"name":"load","doc":"Load an CQ.Ext.tree.TreeNode from the URL specified in the constructor.\nThis is called automatica..."},{"name":"readAttributes","doc":"Takes a JCR child node and creates the attributes needed for createNode.\nThis uses getTitle to ge..."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."}],"events":[{"name":"beforeload","doc":"Fires before a network request is made to retrieve the Json text which specifies a node's children."},{"name":"load","doc":"Fires when the node has been successfuly loaded."},{"name":"loadexception","doc":"Fires if the network request failed."}]}