{"name":"CQ.HTTP","doc":"A helper class providing a set of HTTP-related utilities.\n\nThe response object returned by the me...","configs":[],"props":[{"name":"EXTENSION_HTML","doc":"&lt;static&gt; The extension for HTML files."},{"name":"EXTENSION_JSON","doc":"&lt;static&gt; The extension for JSON files."},{"name":"HEADER_LOCATION","doc":"&lt;static&gt; The Location header."},{"name":"HEADER_MESSAGE","doc":"&lt;static&gt; The Message header."},{"name":"HEADER_PATH","doc":"&lt;static&gt; The Path header."},{"name":"HEADER_STATUS","doc":"&lt;static&gt; The Status header."},{"name":"PARAM_NO_CACHE","doc":"&lt;static&gt; The parameter name for no caching."}],"methods":[{"name":"addParameter","doc":"&lt;static&gt; Adds a parameter to the specified URL. The parameter name and\nvalue will be URL-en..."},{"name":"addSelector","doc":"Adds the specified selector to an URL."},{"name":"clearCookie","doc":"&lt;static&gt; Clears the cookie with the specified name."},{"name":"encodePath","doc":"Encodes the specified path using encodeURI. Additionally +,\n# and ? are encoded.\nThe following ch..."},{"name":"encodePathOfURI","doc":"Encodes the path of the specified URL if it is not already encoded.\nPath means the part of the UR..."},{"name":"eval","doc":"&lt;static&gt; Evaluates and returns the body of the specified response object.\nAlternatively, a ..."},{"name":"externalize","doc":"&lt;static&gt; Makes sure the specified relative URL starts with the context path\nused on the ser..."},{"name":"get","doc":"&lt;static&gt; Requests the specified URL from the server using GET. The request\nwill be synchron..."},{"name":"getAnchor","doc":"&lt;static&gt; Returns the anchor part of the URL."},{"name":"getContextPath","doc":"&lt;static&gt; Returns the context path used on the server."},{"name":"getCookie","doc":"&lt;static&gt; Returns the value of the cookie with the specified name."},{"name":"getExtension","doc":"Returns the extension of an URL. This is the string\nafter the last dot until the end of the url w..."},{"name":"getParameter","doc":"&lt;static&gt; Returns the value of the parameter with the specified name\nin the URL. Only the fi..."},{"name":"getParameters","doc":"&lt;static&gt; Returns the values of the parameters with the specified name\nin the URL. Values wi..."},{"name":"getPath","doc":"&lt;static&gt; Removes all parts but the path from the specified URL.\nExamples:\/x\/y.sel.html?para..."},{"name":"getSchemeAndAuthority","doc":"&lt;static&gt; Returns the scheme and authority (user, hostname, port) part of\nthe specified URL ..."},{"name":"getSelectors","doc":"&lt;static&gt; Returns an array with the selectors present in the given url.\nIf no selectors are ..."},{"name":"getSuffix","doc":"&lt;static&gt; Returns the current request suffix as provided by CQURLInfo.suffix."},{"name":"internalize","doc":"&lt;static&gt; Removes scheme, authority and context path from the specified\nabsolute URL if it h..."},{"name":"isOk","doc":"&lt;static&gt; Checks if the specified response is OK.\nThe response object is expected to look li..."},{"name":"isOkStatus","doc":"&lt;static&gt; Checks whether the specified status code is OK."},{"name":"multiPartPost","doc":"&lt;static&gt; Requests the specified URL from the server using multipart POST. The request\nwill ..."},{"name":"noCaching","doc":"&lt;static&gt; Prevents caching by adding a timestamp to the specified URL."},{"name":"post","doc":"&lt;static&gt; Requests the specified URL from the server using POST. The request\nwill be synchro..."},{"name":"removeAnchor","doc":"&lt;static&gt; Removes the anchor from the specified URL."},{"name":"removeParameter","doc":"&lt;static&gt; Removes a parameter from the specified URL."},{"name":"removeParameters","doc":"&lt;static&gt; Removes all parameter from the specified URL."},{"name":"setAnchor","doc":"&lt;static&gt; Sets the anchor of the specified URL."},{"name":"setCookie","doc":"&lt;static&gt; Sets the value of the cookie with the specified name."},{"name":"setParameter","doc":"&lt;static&gt; Overwrites a parameter in the specified URL. The parameter name\nand value will be ..."},{"name":"setSelector","doc":"Replaces the selector at the given index position. If no selector exists\nat the index position, n..."}],"events":[]}