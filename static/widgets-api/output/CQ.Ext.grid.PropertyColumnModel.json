{"name":"CQ.Ext.grid.PropertyColumnModel","doc":"A custom column model for the CQ.Ext.grid.PropertyGrid.  Generally it should not need to be used ...","configs":[{"name":"columns","doc":"An Array of object literals. The config options defined by CQ.Ext.grid.Column are the options whi..."},{"name":"defaultSortable","doc":"(optional) Default sortable of columns which have no sortable specified (defaults to false). This..."},{"name":"defaultWidth","doc":"(optional) The width of columns which have no width specified (defaults to 100). This property sh..."}],"props":[{"name":"config","doc":"An Array of Column definition objects representing the configuration\nof this ColumnModel.  See CQ..."}],"methods":[{"name":"constructor","doc":""},{"name":"destroy","doc":"Destroys this column model by purging any event listeners. Destroys and dereferences all Columns."},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"findColumnIndex","doc":"Finds the index of the first matching column for the given dataIndex."},{"name":"getCellEditor","doc":"Returns the editor defined for the cell\/column."},{"name":"getColumnById","doc":"Returns the column for a specified id."},{"name":"getColumnCount","doc":"Returns the number of columns."},{"name":"getColumnHeader","doc":"Returns the header for the specified column."},{"name":"getColumnId","doc":"Returns the id of the column at the specified index."},{"name":"getColumnTooltip","doc":"Returns the tooltip for the specified column."},{"name":"getColumnWidth","doc":"Returns the width for the specified column."},{"name":"getColumnsBy","doc":"Returns the column configs that return true by the passed function that is called\nwith (columnCon..."},{"name":"getDataIndex","doc":"Returns the dataIndex for the specified column.\r\n\/\/ Get field name for the column\nvar fieldName =..."},{"name":"getIndexById","doc":"Returns the index for a specified column id."},{"name":"getRenderer","doc":"Returns the rendering (formatting) function defined for the column."},{"name":"getTotalWidth","doc":"Returns the total width of all columns."},{"name":"isCellEditable","doc":"Returns true if the cell is editable.\r\nvar store = new CQ.Ext.data.Store({...});\nvar colModel = n..."},{"name":"isFixed","doc":"Returns true if the column is fixed,\nfalse otherwise."},{"name":"isHidden","doc":"Returns true if the column is hidden,\nfalse otherwise."},{"name":"isMenuDisabled","doc":"Returns true if the specified column menu is disabled."},{"name":"isResizable","doc":"Returns true if the column can be resized"},{"name":"isSortable","doc":"Returns true if the specified column is sortable."},{"name":"moveColumn","doc":"Moves a column from one position to another."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"setColumnHeader","doc":"Sets the header for a column."},{"name":"setColumnTooltip","doc":"Sets the tooltip for a column."},{"name":"setColumnWidth","doc":"Sets the width for a column."},{"name":"setConfig","doc":"Reconfigures this column model according to the passed Array of column definition objects.\nFor a ..."},{"name":"setDataIndex","doc":"Sets the dataIndex for a column."},{"name":"setEditable","doc":"Sets if a column is editable."},{"name":"setEditor","doc":"Sets the editor for a column and destroys the prior editor."},{"name":"setHidden","doc":"Sets if a column is hidden.\r\nmyGrid.getColumnModel().setHidden(0, true); \/\/ hide column 0 (0 = th..."},{"name":"setRenderer","doc":"Sets the rendering (formatting) function for a column.  See CQ.Ext.util.Format for some\ndefault f..."}],"events":[{"name":"columnmoved","doc":"Fires when a column is moved."},{"name":"configchange","doc":"Fires when the configuration is changed"},{"name":"headerchange","doc":"Fires when the text of a header changes."},{"name":"hiddenchange","doc":"Fires when a column is hidden or \"unhidden\"."},{"name":"widthchange","doc":"Fires when the width of a column is programmaticially changed using\nsetColumnWidth.\nNote internal..."}]}