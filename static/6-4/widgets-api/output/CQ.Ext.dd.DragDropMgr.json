{"name":"CQ.Ext.dd.DragDropMgr","doc":"DragDropMgr is a singleton that tracks the element interaction for\nall DragDrop items in the wind...","configs":[],"props":[{"name":"INTERSECT","doc":"&lt;static&gt; In intersect mode, drag and drop interaction is defined by the\noverlap of two or m..."},{"name":"POINT","doc":"&lt;static&gt; In point mode, drag and drop interaction is defined by the\nlocation of the cursor ..."},{"name":"clickPixelThresh","doc":"&lt;static&gt; The number of pixels that the mouse needs to move after the\nmousedown before the d..."},{"name":"clickTimeThresh","doc":"&lt;static&gt; The number of milliseconds after the mousedown event to initiate the\ndrag if we do..."},{"name":"css","doc":"A reference to the style property"},{"name":"el","doc":"The element"},{"name":"id","doc":"The element id"},{"name":"mode","doc":"&lt;static&gt; The current drag and drop mode.  Default: POINT"},{"name":"preventDefault","doc":"&lt;static&gt; Flag to determine if we should prevent the default behavior of the\nevents we defin..."},{"name":"stopPropagation","doc":"&lt;static&gt; Flag to determine if we should stop the propagation of the events\nwe generate. Thi..."},{"name":"useCache","doc":"&lt;static&gt; Set useCache to false if you want to force object the lookup of each\ndrag and drop..."}],"methods":[{"name":"getBestMatch","doc":"&lt;static&gt; Helper function for getting the best match from the list of drag\nand drop objects ..."},{"name":"getCss","doc":"&lt;static&gt; Returns the style property for the DOM element (i.e.,\ndocument.getElById(id).style)"},{"name":"getDDById","doc":"&lt;static&gt; Returns the DragDrop instance for a given id"},{"name":"getElement","doc":"&lt;static&gt; Returns the actual DOM element"},{"name":"getLocation","doc":"&lt;static&gt; Returns a Region object containing the drag and drop element's position\nand size, ..."},{"name":"getPosX","doc":"&lt;static&gt; Returns the X position of an html element"},{"name":"getPosY","doc":"&lt;static&gt; Returns the Y position of an html element"},{"name":"getRelated","doc":"&lt;static&gt; Returns the drag and drop instances that are in all groups the\npassed in instance ..."},{"name":"getScrollLeft","doc":"&lt;static&gt; Gets the scrollLeft"},{"name":"getScrollTop","doc":"&lt;static&gt; Gets the scrollTop"},{"name":"getStyle","doc":"&lt;static&gt; Returns the specified element style property"},{"name":"handleWasClicked","doc":"&lt;static&gt; Recursively searches the immediate parent and all child nodes for\nthe handle eleme..."},{"name":"isDragDrop","doc":"&lt;static&gt; Utility function to determine if a given element has been\nregistered as a drag dro..."},{"name":"isHandle","doc":"&lt;static&gt; Utility function to determine if a given element has been\nregistered as a drag dro..."},{"name":"isLegalTarget","doc":"&lt;static&gt; Returns true if the specified dd target is a legal target for\nthe specifice drag obj"},{"name":"isLocked","doc":"&lt;static&gt; Is drag and drop locked?"},{"name":"isTypeOfDD","doc":"&lt;static&gt; My goal is to be able to transparently determine if an object is\ntypeof DragDrop, ..."},{"name":"lock","doc":"&lt;static&gt; Lock all drag and drop functionality"},{"name":"moveToEl","doc":"&lt;static&gt; Sets the x\/y position of an element to the location of the\ntarget element."},{"name":"numericSort","doc":"&lt;static&gt; Numeric array sort function"},{"name":"refreshCache","doc":"&lt;static&gt; Refreshes the cache of the top-left and bottom-right points of the\ndrag and drop o..."},{"name":"regDragDrop","doc":"&lt;static&gt; Each DragDrop instance must be registered with the DragDropMgr.\nThis is executed i..."},{"name":"regHandle","doc":"&lt;static&gt; Each DragDrop handle element must be registered.  This is done\nautomatically when ..."},{"name":"startDrag","doc":"&lt;static&gt; Fired when either the drag pixel threshol or the mousedown hold\ntime threshold has..."},{"name":"stopEvent","doc":"&lt;static&gt; Utility to stop event propagation and event default, if these\nfeatures are turned on."},{"name":"swapNode","doc":"&lt;static&gt; Swap two nodes.  In IE, we use the native method, for others we\nemulate the IE beh..."},{"name":"unlock","doc":"&lt;static&gt; Unlock all drag and drop functionality"},{"name":"verifyEl","doc":"&lt;static&gt; This checks to make sure an element exists and is in the DOM.  The\nmain purpose is..."}],"events":[]}