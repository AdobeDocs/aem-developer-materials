{"name":"CQ.Ext.util.Format","doc":"Reusable data formatting functionsThis class is a singleton and cannot be created directly.","configs":[],"props":[],"methods":[{"name":"capitalize","doc":"Converts the first character only of a string to upper case"},{"name":"date","doc":"Parse a value into a formatted date using the specified format pattern."},{"name":"dateRenderer","doc":"Returns a date rendering function that can be reused to apply a date format multiple times effici..."},{"name":"defaultValue","doc":"Checks a reference and converts it to the default value if it's empty"},{"name":"ellipsis","doc":"Truncate a string and add an ellipsis ('...') to the end if it exceeds the specified length"},{"name":"fileSize","doc":"Simple format for a file size (xxx bytes, xxx KB, xxx MB)"},{"name":"htmlDecode","doc":"Convert certain characters (&, , and ') from their HTML character equivalents."},{"name":"htmlEncode","doc":"Convert certain characters (&, , and ') to their HTML character equivalents for literal display i..."},{"name":"lowercase","doc":"Converts a string to all lower case letters"},{"name":"math","doc":"It does simple math for use in a template, for example:var tpl = new CQ.Ext.Template('{value} * 1..."},{"name":"nl2br","doc":"Converts newline characters to the HTML tag &lt;br\/>"},{"name":"number","doc":"Formats the number according to the format string.\nexamples (123456.789):\n\n0 - (123456) show only..."},{"name":"numberRenderer","doc":"Returns a number rendering function that can be reused to apply a number format multiple times ef..."},{"name":"plural","doc":"Selectively do a plural form of a word based on a numeric value. For example, in a template,\n{com..."},{"name":"round","doc":"Rounds the passed number to the required decimal precision."},{"name":"stripScripts","doc":"Strips all script tags"},{"name":"stripTags","doc":"Strips all HTML tags"},{"name":"substr","doc":"Returns a substring from within an original string"},{"name":"trim","doc":"Trims any whitespace from either side of a string"},{"name":"undef","doc":"Checks a reference and converts it to empty string if it is undefined"},{"name":"uppercase","doc":"Converts a string to all upper case letters"},{"name":"usMoney","doc":"Format a number as US currency"}],"events":[]}