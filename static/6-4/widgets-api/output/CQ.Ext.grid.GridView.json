{"name":"CQ.Ext.grid.GridView","doc":"This class encapsulates the user interface of an CQ.Ext.grid.GridPanel.\nMethods of this class may...","configs":[{"name":"autoFill","doc":"Defaults to false. Specify true to have the column widths re-proportioned when the grid is initia..."},{"name":"cellSelector","doc":"The selector used to find cells internally (defaults to 'td.x-grid3-cell')"},{"name":"cellSelectorDepth","doc":"The number of levels to search for cells in event delegation (defaults to 4)"},{"name":"columnsText","doc":"The text displayed in the 'Columns' menu item (defaults to 'Columns')"},{"name":"deferEmptyText","doc":"True to defer emptyText being applied until the store's first load (defaults to true)."},{"name":"emptyText","doc":"Default text (html tags are accepted) to display in the grid body when no rows are available (def..."},{"name":"enableRowBody","doc":"True to add a second TR element per row that can be used to provide a row body that spans beneath..."},{"name":"forceFit","doc":"Defaults to false. Specify true to have the column widths re-proportioned at all times. The initi..."},{"name":"headerMenuOpenCls","doc":"The CSS class to add to the header cell when its menu is visible. Defaults to 'x-grid3-hd-menu-open'"},{"name":"headersDisabled","doc":"True to disable the grid column headers (defaults to false). Use the ColumnModel menuDisabled con..."},{"name":"markDirty","doc":"True to show the dirty cell indicator when a cell has been modified. Defaults to true."},{"name":"rowBodySelector","doc":"The selector used to find row bodies internally (defaults to 'div.x-grid3-row')"},{"name":"rowBodySelectorDepth","doc":"The number of levels to search for row bodies in event delegation (defaults to 10)"},{"name":"rowOverCls","doc":"The CSS class added to each row when it is hovered over. Defaults to 'x-grid3-row-over'"},{"name":"rowSelector","doc":"The selector used to find rows internally (defaults to 'div.x-grid3-row')"},{"name":"rowSelectorDepth","doc":"The number of levels to search for rows in event delegation (defaults to 10)"},{"name":"scrollOffset","doc":"The amount of space to reserve for the vertical scrollbar (defaults to undefined). If an explicit..."},{"name":"selectedRowClass","doc":"The CSS class applied to a selected row (defaults to 'x-grid3-row-selected'). An example overridi..."},{"name":"sortAscText","doc":"The text displayed in the 'Sort Ascending' menu item (defaults to 'Sort Ascending')"},{"name":"sortClasses","doc":"The CSS classes applied to a header when it is sorted. (defaults to ['sort-asc', 'sort-desc'])"},{"name":"sortDescText","doc":"The text displayed in the 'Sort Descending' menu item (defaults to 'Sort Descending')"}],"props":[{"name":"bodyTpl","doc":"The template to use when rendering the body. Has a default template"},{"name":"cellTpl","doc":"The template to use to render each cell. Has a default template"},{"name":"dragZone","doc":"\nA customized implementation of a DragZone which provides default implementations\nof the template..."},{"name":"headerTpl","doc":"The template to use when rendering headers. Has a default template"},{"name":"mainBody","doc":"Read-only. The GridView's body Element which encapsulates all rows in the Grid.\nThis Element is o..."},{"name":"masterTpl","doc":"\nThe master template to use when rendering the GridView. Has a default template"}],"methods":[{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"findCellIndex","doc":"Return the index of the grid column which contains the passed HTMLElement.\nSee also findRowIndex"},{"name":"findRow","doc":"Return the HtmlElement representing the grid row which contains the passed element."},{"name":"findRowBody","doc":"Return the HtmlElement representing the grid row body which contains the passed element."},{"name":"findRowIndex","doc":"Return the index of the grid row which contains the passed HTMLElement.\nSee also findCellIndex"},{"name":"focusCell","doc":"Focuses the specified cell."},{"name":"focusRow","doc":"Focuses the specified row."},{"name":"getCell","doc":"Returns the grid's &lt;td> HtmlElement at the specified coordinates."},{"name":"getGridInnerWidth","doc":"Returns the total internal width available to the grid, taking the scrollbar into account"},{"name":"getHeaderCell","doc":"Return the &lt;td> HtmlElement which represents the Grid's header cell for the specified column i..."},{"name":"getRow","doc":"Return the &lt;div> HtmlElement which represents a Grid row for the specified index."},{"name":"getRowClass","doc":"Override this function to apply custom CSS classes to rows during rendering.  You can also supply..."},{"name":"handleHdMenuClickDefault","doc":"Called by handleHdMenuClick if any button except a sort ASC\/DESC button was clicked. The default ..."},{"name":"refresh","doc":"Refreshs the grid UI"},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"scrollToTop","doc":"Scrolls the grid to the top"}],"events":[{"name":"beforerefresh","doc":"Internal UI Event. Fired before the view is refreshed."},{"name":"beforerowremoved","doc":"Internal UI Event. Fired before a row is removed."},{"name":"beforerowsinserted","doc":"Internal UI Event. Fired before rows are inserted."},{"name":"refresh","doc":"Internal UI Event. Fired after the GridView's body has been refreshed."},{"name":"rowremoved","doc":"Internal UI Event. Fired after a row is removed."},{"name":"rowsinserted","doc":"Internal UI Event. Fired after rows are inserted."},{"name":"rowupdated","doc":"Internal UI Event. Fired after a row has been updated."}]}