{"name":"CQ.Ext.SplitBar","doc":"Creates draggable splitter bar functionality from two elements (element to be dragged and element...","configs":[],"props":[{"name":"animate","doc":"Whether to animate the transition to the new size"},{"name":"maxSize","doc":"The maximum size of the resizing element. (Defaults to 2000)"},{"name":"minSize","doc":"\nThe minimum size of the resizing element. (Defaults to 0)"},{"name":"tickSize","doc":"The increment, in pixels by which to move this SplitBar. When undefined, the SplitBar moves smoot..."},{"name":"useShim","doc":"Whether to create a transparent shim that overlays the page when dragging, enables dragging acros..."}],"methods":[{"name":"destroy","doc":"Destroy this splitbar."},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"getAdapter","doc":"Get the adapter this SplitBar uses"},{"name":"getMaximumSize","doc":"Gets the maximum size for the resizing element"},{"name":"getMinimumSize","doc":"Gets the minimum size for the resizing element"},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"setAdapter","doc":"Set the adapter this SplitBar uses"},{"name":"setCurrentSize","doc":"Sets the initialize size for the resizing element"},{"name":"setMaximumSize","doc":"Sets the maximum size for the resizing element"},{"name":"setMinimumSize","doc":"Sets the minimum size for the resizing element"}],"events":[{"name":"beforeresize","doc":"Fires before the splitter is dragged"},{"name":"moved","doc":"Fires when the splitter is moved"},{"name":"resize","doc":"Fires when the splitter is moved (alias for moved)"}]}