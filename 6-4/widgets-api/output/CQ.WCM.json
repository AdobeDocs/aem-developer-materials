{"name":"CQ.WCM","doc":"A helper class providing a set of WCM-related utilities.This class is a singleton and cannot be c...","configs":[],"props":[{"name":"ACTION_COPY","doc":"&lt;static&gt; The action when an item gets added to the clipboard by copying\n(Ctrl + C)."},{"name":"ACTION_CUT","doc":"&lt;static&gt; The action when an item gets added to the clipboard by cutting\n(Ctrl + X)."},{"name":"EDITABLE_SCRIPT_FINDER","doc":"&lt;static&gt; String used to find the DOM script tag corresponding to an editable path.\n$PATH$ i..."},{"name":"LAYERS_COOKIE","doc":"&lt;static&gt; The name of the cookie holding the layers."},{"name":"LAYERS_COOKIE_PATH","doc":"&lt;static&gt; The path for the cookie holding the layers."},{"name":"LAYER_LCSTATUS","doc":"&lt;static&gt; The name of the layer for the Live Copy status."},{"name":"MODE_ANALYTICS","doc":"&lt;static&gt; The value for the analytics mode."},{"name":"MODE_COOKIE","doc":"&lt;static&gt; The name of the cookie holding the mode."},{"name":"MODE_COOKIE_PATH","doc":"&lt;static&gt; The path for of the cookie holding the mode."},{"name":"MODE_DESIGN","doc":"&lt;static&gt; The value for the design mode."},{"name":"MODE_EDIT","doc":"&lt;static&gt; The value for the edit mode."},{"name":"MODE_PREVIEW","doc":"&lt;static&gt; The value for the preview mode."},{"name":"MODE_TIMEWARP","doc":"&lt;static&gt; The value for the timewarp mode."},{"name":"PREVIEW_RESPONSIVE","doc":"&lt;static&gt; The value for the responsive preview mode."},{"name":"TIMEWARP_COOKIE","doc":"&lt;static&gt; The name of the cookie holding timewarp information."},{"name":"altKey","doc":"&lt;static&gt; True if the alt key is held down."},{"name":"getTopWindow","doc":"&lt;static&gt; Returns the last accessible ascendant window."}],"methods":[{"name":"areEditablesReady","doc":"Returns if all editables of the page are ready."},{"name":"clearClipboard","doc":"&lt;static&gt; Clears the clipboard."},{"name":"copy","doc":"&lt;static&gt; Copies an item to the clipboard."},{"name":"cut","doc":"&lt;static&gt; Copies an item to the clipboard and marks it for deletion\nafter pasting (if the cl..."},{"name":"deselect","doc":"&lt;static&gt; Removes an item from the selection."},{"name":"edit","doc":"&lt;static&gt; Shorthand for makeEditable."},{"name":"endMakeEditablesQueue","doc":"Ends the queue mode for the makeEditable: all queued editable configs will be built and\neditables..."},{"name":"getClipboardRecords","doc":"&lt;static&gt; Returns the items in the clipboard as Records.\nThis method does not remove cut ite..."},{"name":"getComponentConfig","doc":"&lt;static&gt; Returns the page-specific config of the component with the\nspecified resource type."},{"name":"getComponentList","doc":"&lt;static&gt; Returns a ComponentList object for the specified page. If path is\nnull, the compon..."},{"name":"getContainerStepOptions","doc":"&lt;static&gt; Returns workflow model options. The list of workflow models is slightly modified i..."},{"name":"getContentFinder","doc":"&lt;static&gt; Returns the Content Finder (or\nnull if none is available)."},{"name":"getContentUrl","doc":"&lt;static&gt; Returns the URL of the content window, independent of the\npresence of the Content ..."},{"name":"getContentWindow","doc":"&lt;static&gt; Returns the window of the content page, independent of the\npresence of the Content..."},{"name":"getDesign","doc":"&lt;static&gt; Returns a design object of the page that is specified by path."},{"name":"getDialog","doc":"&lt;static&gt; Creates and\/or returns a Dialog using the\nspecified configuration (which may also ..."},{"name":"getDialogConfig","doc":"&lt;static&gt; Completes and returns the specified dialog config (see\ngetDialog for options)."},{"name":"getDialogs","doc":"&lt;static&gt; Returns all dialogs of the content page."},{"name":"getDropTargetComponents","doc":"Gets an array of all currently registered components that work as external drop\ntargets."},{"name":"getEditable","doc":"&lt;static&gt; Returns the edit component for the specified content path.\nExample:\nvar editBar = ..."},{"name":"getEditableFromDOM","doc":"Finds the next editable which \"contains\" the given element.\nNote that this only returns final edi..."},{"name":"getEditablePathFromDOM","doc":"Finds the path of the next editable which \"contains\" the given element.\nThis will return the path..."},{"name":"getEditables","doc":"&lt;static&gt; Returns all edit components of the content page."},{"name":"getLanguageOptions","doc":"&lt;static&gt; Returns the available languages as options. This method can be used\ndirectly as CQ..."},{"name":"getLayers","doc":"&lt;static&gt; Returns all layers of the content page."},{"name":"getMode","doc":"&lt;static&gt; Returns either the current WCM mode: MODE_EDIT,\nMODE_PREVIEW and MODE_DESIGN,\nor M..."},{"name":"getNestedEditables","doc":"&lt;static&gt; Returns all the path of the CQ.wcm.EditBase nested into the given content path.\nEx..."},{"name":"getPage","doc":"&lt;static&gt; Returns a page object for the specified path."},{"name":"getPageInfo","doc":"Returns the page information for the current user."},{"name":"getPageLanguage","doc":"Returns the content language of the page."},{"name":"getPageLocale","doc":"Returns the content language of the page as a locale object."},{"name":"getPagePath","doc":"&lt;static&gt; Returns the path of the current page usually set by launchSidekick.\nIf it is not s..."},{"name":"getPreviewMode","doc":"&lt;static&gt; Returns the current WCM preview mode: MODE_PREVIEW\nor NULL."},{"name":"getSelectedItems","doc":"&lt;static&gt; Returns the items in the selection for processing. This will not\nclear the selecti..."},{"name":"getSidekick","doc":"&lt;static&gt; Returns the Sidekick (or null if none is\navailable)."},{"name":"getStyleOptions","doc":"&lt;static&gt; Returns the styles defined by the design of the component at\nthe specified content..."},{"name":"getWorkflowPackageOptions","doc":"&lt;static&gt; Returns the currently defined workflow packages as options. This method can be use..."},{"name":"hide","doc":"&lt;static&gt; Hides all edit components of the content page (i.e. switching to\npreview mode)."},{"name":"hideLayer","doc":"&lt;static&gt; Hides the specified layer."},{"name":"hidePlaceholders","doc":"&lt;static&gt; Hides the placeholders for the specified element."},{"name":"isAnalyticsMode","doc":"&lt;static&gt; Returns true if the current WCM mode equals\nMODE_ANALYTICS."},{"name":"isContentWindow","doc":"&lt;static&gt; Returns true if the specified window is the window displaying\nthe content page, in..."},{"name":"isContentWindowLoading","doc":"&lt;static&gt; Returns true if the content window is loading."},{"name":"isDesignMode","doc":"&lt;static&gt; Returns true if the current WCM mode equals\nMODE_DESIGN."},{"name":"isEditMode","doc":"&lt;static&gt; Returns true if the current WCM mode equals\nMODE_EDIT."},{"name":"isPreviewMode","doc":"&lt;static&gt; Returns true if the current WCM mode equals\nMODE_PREVIEW."},{"name":"isResponsiveMode","doc":"&lt;static&gt; Returns true if the current WCM preview mode equals\nPREVIEW_RESPONSIVE."},{"name":"isShownLayer","doc":"&lt;static&gt; Returns true if the specified layer is currently shown."},{"name":"isSidekickReady","doc":"Returns if the sidekick is ready, i.e. rendered and shown."},{"name":"isTimewarpMode","doc":"&lt;static&gt; Returns true if the TIMEWARP_COOKIE is set."},{"name":"launchSidekick","doc":"&lt;static&gt; Creates and\/or returns the Sidekick.\nThe Content Finder invokes this method\nwithou..."},{"name":"loadToolbar","doc":"&lt;static&gt; Loads the global editing toolbar with the specified\nCQ.Ext.Toolbar (or a toolbar c..."},{"name":"makeEditable","doc":"&lt;static&gt; Creates an edit component using the specified configuration,\nmaking a certain area..."},{"name":"onClipboardChange","doc":"&lt;static&gt; Adds a listener to track clipboard changes.\n\nadd Listeners will\nbe called with the..."},{"name":"onEditableBeforeRender","doc":"&lt;static&gt; Adds a listener that is called before the specified edit\ncomponent is rendered."},{"name":"onEditableReady","doc":"&lt;static&gt; Adds a listener that is called as soon as the specified edit\ncomponent is ready."},{"name":"onSelectionChange","doc":"&lt;static&gt; Adds a listener to track selection changes.\n\nadd Listeners will\nbe called with the..."},{"name":"paste","doc":"&lt;static&gt; Returns the items in the clipboard as an array for processing.\nFor copied items, t..."},{"name":"registerDialog","doc":"&lt;static&gt; Registers the specified dialog under the specified key."},{"name":"registerDropTargetComponent","doc":"Registers the specified Ext component that is neither part of a dialog, nor\nan editable, but shou..."},{"name":"remove","doc":"&lt;static&gt; Removes the specified item from both the selection and the clipboard,\nthen attempt..."},{"name":"select","doc":"&lt;static&gt; Adds an item to the selection."},{"name":"setMode","doc":"&lt;static&gt; Sets the WCM mode. Supported WCM modes are: MODE_EDIT,\nMODE_PREVIEW or MODE_DESIGN..."},{"name":"setPreviewMode","doc":"&lt;static&gt; Sets the WCM preview mode. Supported preview modes are:\nPREVIEW_RESPONSIVE or NULL."},{"name":"show","doc":"&lt;static&gt; Shows all edit components of the content page (i.e. switching to\nedit mode). If th..."},{"name":"showLayer","doc":"&lt;static&gt; Shows the specified layer."},{"name":"showPlaceholders","doc":"&lt;static&gt; Shows the placeholders for the specified element."},{"name":"startMakeEditablesQueue","doc":"Starts the queue mode for makeEditable: all subsequent calls to makeEditable\nwill be queued. Only..."},{"name":"toggleEditables","doc":"Toggles the editables."},{"name":"unClipboardChange","doc":"Removes the specified listener from clipboard change listeners."},{"name":"unSelectionChange","doc":"Removes the specified listener from selection change listeners."},{"name":"unloadToolbar","doc":"&lt;static&gt; Restores the default set of toolbar actions to the global\nediting toolbar."},{"name":"unregisterDialog","doc":"&lt;static&gt; Unregisters the dialog with the specified key."},{"name":"unregisterDropTargetComponent","doc":"Unregisters the specified component as an external drop target (= a drop\ntarget that is neither p..."}],"events":[{"name":"editableready","doc":"Fires when a single editable is ready.\nNot to be confused with editablesready which is called whe..."},{"name":"editablesready","doc":"Fires when all the page editables are ready\nNot to be confused with editableready which is called..."},{"name":"pageinfoloaded","doc":"Fires when page info are loaded"},{"name":"sidekickready","doc":"Fires when the sidekick is ready"},{"name":"wcmmodechange","doc":"Fires when the wcm mode changed"}]}