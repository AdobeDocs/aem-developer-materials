{"name":"CQ.Ext.direct.Provider","doc":"CQ.Ext.direct.Provider is an abstract class meant to be extended.\nFor example ExtJs implements th...","configs":[{"name":"id","doc":"The unique id of the provider (defaults to an auto-assigned id). You should assign an id if you n..."},{"name":"priority","doc":"Priority of the request. Lower is higher priority, 0 means \"duplex\" (always on). All Providers de..."},{"name":"type","doc":"Required, undefined by default. The type of provider specified to CQ.Ext.Direct.addProvider to cr..."}],"props":[{"name":"connect","doc":"Abstract methods for subclasses to implement."},{"name":"disconnect","doc":"Abstract methods for subclasses to implement."}],"methods":[{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"isConnected","doc":"Returns whether or not the server-side is currently connected.\nAbstract method for subclasses to ..."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."}],"events":[{"name":"connect","doc":"Fires when the Provider connects to the server-side"},{"name":"data","doc":"Fires when the Provider receives data from the server-side"},{"name":"disconnect","doc":"Fires when the Provider disconnects from the server-side"},{"name":"exception","doc":"Fires when the Provider receives an exception from the server-side"}]}