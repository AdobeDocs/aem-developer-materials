{"name":"CQ.Ext.util.ClickRepeater","doc":"\r\n  \r\n A wrapper class which can be applied to any element. Fires a \"click\" event while the\r\n mou...","configs":[{"name":"accelerate","doc":"True if autorepeating should start slowly and accelerate. \"interval\" and \"delay\" are ignored."},{"name":"delay","doc":"The initial delay before the repeating event begins firing. Similar to an autorepeat key delay."},{"name":"el","doc":"The element to act as a button."},{"name":"interval","doc":"The interval between firings of the \"click\" event. Default 20 ms."},{"name":"pressClass","doc":"A CSS class name to be applied to the element while pressed."},{"name":"preventDefault","doc":"True to prevent the default click event"},{"name":"stopDefault","doc":"True to stop the default click event"}],"props":[],"methods":[{"name":"disable","doc":"Disables the repeater and stops events from firing."},{"name":"enable","doc":"Enables the repeater and allows events to fire."},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"setDisabled","doc":"Convenience function for setting disabled\/enabled by boolean."}],"events":[{"name":"click","doc":"Fires on a specified interval during the time the element is pressed."},{"name":"mousedown","doc":"Fires when the mouse button is depressed."},{"name":"mouseup","doc":"Fires when the mouse key is released."}]}