{"name":"CQ.Ext.dd.DragZone","doc":"This class provides a container DD instance that allows dragging of multiple child source nodes.\n...","configs":[{"name":"containerScroll","doc":"True to register this container with the Scrollmanager for auto scrolling during drag operations."},{"name":"ddGroup","doc":"A named drag drop group to which this object belongs. If a group is specified, then this object w..."},{"name":"dropAllowed","doc":"The CSS class returned to the drag source when drop is allowed (defaults to \"x-dd-drop-ok\")."},{"name":"dropNotAllowed","doc":"The CSS class returned to the drag source when drop is not allowed (defaults to \"x-dd-drop-nodrop\")."},{"name":"hlColor","doc":"The color to use when visually highlighting the drag source in the afterRepair method after a fai..."}],"props":[{"name":"available","doc":"The available property is false until the linked dom element is accessible."},{"name":"centerFrame","doc":"By default the frame is positioned exactly where the drag element is, so\nwe use the cursor offset..."},{"name":"config","doc":"Configuration attributes passed into the constructor"},{"name":"defaultPadding","doc":"Provides default constraint padding to \"constrainTo\" elements (defaults to {left: 0, right:0, top..."},{"name":"dragData","doc":"This property contains the data representing the dragged object. This data is set up by the imple..."},{"name":"groups","doc":"The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get ..."},{"name":"hasOuterHandles","doc":"By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element ..."},{"name":"id","doc":"\nThe id of the element associated with this object.  This is what we\nrefer to as the \"linked elem..."},{"name":"ignoreSelf","doc":"Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element...."},{"name":"invalidHandleClasses","doc":"An Array of CSS class names for elements to be considered in valid as drag handles."},{"name":"invalidHandleIds","doc":"An object who's property names identify the IDs of elements to be considered invalid as drag hand..."},{"name":"invalidHandleTypes","doc":"An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non..."},{"name":"isTarget","doc":"By default, all instances can be a drop target.  This can be disabled by\nsetting isTarget to false."},{"name":"maintainOffset","doc":"Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element..."},{"name":"moveOnly","doc":"When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events whe..."},{"name":"onStartDrag","doc":"An empty function by default, but provided so that you can perform a custom action once the initi..."},{"name":"padding","doc":"The padding configured for this drag and drop object for calculating\nthe drop zone intersection w..."},{"name":"primaryButtonOnly","doc":"By default the drag and drop instance will only respond to the primary\nbutton click (left button ..."},{"name":"resizeFrame","doc":"By default we resize the drag frame to be the same size as the element\nwe want to drag (this is t..."},{"name":"scroll","doc":"When set to true, the utility automatically tries to scroll the browser\nwindow when a drag and dr..."},{"name":"xTicks","doc":"Array of pixel locations the element will snap to if we specified a\nhorizontal graduation\/interva..."},{"name":"yTicks","doc":"Array of pixel locations the element will snap to if we specified a\nvertical graduation\/interval...."}],"methods":[{"name":"addInvalidHandleClass","doc":"Lets you specify a css class of elements that will not initiate a drag"},{"name":"addInvalidHandleId","doc":"Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag"},{"name":"addInvalidHandleType","doc":"Allows you to specify a tag name that should not start a drag operation\nwhen clicked.  This is de..."},{"name":"addToGroup","doc":"Add this instance to a group of related drag\/drop objects.  All\ninstances belong to at least one ..."},{"name":"afterDragDrop","doc":"An empty function by default, but provided so that you can perform a custom action\nafter a valid ..."},{"name":"afterDragEnter","doc":"An empty function by default, but provided so that you can perform a custom action\nwhen the dragg..."},{"name":"afterDragOut","doc":"An empty function by default, but provided so that you can perform a custom action\nafter the drag..."},{"name":"afterDragOver","doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the drag..."},{"name":"afterInvalidDrop","doc":"An empty function by default, but provided so that you can perform a custom action\nafter an inval..."},{"name":"afterRepair","doc":"Called after a repair of an invalid drop. By default, highlights this.dragData.ddel"},{"name":"alignElWithMouse","doc":"Sets the element to the location of the mousedown or click event,\nmaintaining the cursor location..."},{"name":"applyConfig","doc":"Applies the configuration parameters that were passed into the constructor.\nThis is supposed to h..."},{"name":"autoOffset","doc":"Sets the pointer offset to the distance between the linked element's top\nleft corner and the loca..."},{"name":"b4Drag","doc":"Event that fires prior to the onDrag event.  Overrides\nCQ.Ext.dd.DragDrop."},{"name":"b4MouseDown","doc":"Event that fires prior to the onMouseDown event.  Overrides\nCQ.Ext.dd.DragDrop."},{"name":"beforeDragDrop","doc":"An empty function by default, but provided so that you can perform a custom action before the dra..."},{"name":"beforeDragEnter","doc":"An empty function by default, but provided so that you can perform a custom action\nbefore the dra..."},{"name":"beforeDragOut","doc":"An empty function by default, but provided so that you can perform a custom action before the dra..."},{"name":"beforeDragOver","doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the drag..."},{"name":"beforeInvalidDrop","doc":"An empty function by default, but provided so that you can perform a custom action after an inval..."},{"name":"cachePosition","doc":"Saves the most recent position so that we can reset the constraints and\ntick marks on-demand.  We..."},{"name":"clearConstraints","doc":"Clears any constraints applied to this instance.  Also clears ticks\nsince they can't exist indepe..."},{"name":"clearTicks","doc":"Clears any tick interval defined for this instance"},{"name":"constrainTo","doc":"Initializes the drag drop object's constraints to restrict movement to a certain element.\nUsage:\r..."},{"name":"createFrame","doc":"Creates the proxy element if it does not yet exist"},{"name":"endDrag","doc":"Fired when we are done dragging the object"},{"name":"getDragData","doc":"\nCalled when a mousedown occurs in this container. Looks in CQ.Ext.dd.Registry\nfor a valid target..."},{"name":"getDragEl","doc":"Returns a reference to the actual element to drag.  By default this is\nthe same as the html eleme..."},{"name":"getEl","doc":"Returns a reference to the linked element"},{"name":"getProxy","doc":"Returns the drag source's underlying CQ.Ext.dd.StatusProxy"},{"name":"getRepairXY","doc":"Called before a repair of an invalid drop to get the XY to animate to. By default returns\nthe XY ..."},{"name":"hideProxy","doc":"Hides the drag source's CQ.Ext.dd.StatusProxy"},{"name":"init","doc":"Sets up the DragDrop object.  Must be called in the constructor of any\nCQ.Ext.dd.DragDrop subclass"},{"name":"initFrame","doc":"Initialization for the drag frame element.  Must be called in the\nconstructor of all subclasses"},{"name":"initTarget","doc":"Initializes Targeting functionality only... the object does not\nget a mousedown handler."},{"name":"isLocked","doc":"Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag\/dr..."},{"name":"isValidHandleChild","doc":"Checks the tag exclusion list to see if this click should be ignored"},{"name":"lock","doc":"Lock this instance"},{"name":"onAvailable","doc":"Override the onAvailable method to do what is needed after the initial\nposition was determined."},{"name":"onBeforeDrag","doc":"An empty function by default, but provided so that you can perform a custom action before the ini..."},{"name":"onDrag","doc":"Abstract method called during the onMouseMove event while dragging an\nobject."},{"name":"onDragDrop","doc":"Abstract method called when this item is dropped on another DragDrop\nobj"},{"name":"onDragEnter","doc":"Abstract method called when this element fist begins hovering over\nanother DragDrop obj"},{"name":"onDragOut","doc":"Abstract method called when we are no longer hovering over an element"},{"name":"onDragOver","doc":"Abstract method called when this element is hovering over another\nDragDrop obj"},{"name":"onInitDrag","doc":"Called once drag threshold has been reached to initialize the proxy element. By default, it clone..."},{"name":"onInvalidDrop","doc":"Abstract method called when this item is dropped on an area with no\ndrop target"},{"name":"onMouseDown","doc":"Event handler that fires when a drag\/drop obj gets a mousedown"},{"name":"onMouseUp","doc":"Event handler that fires when a drag\/drop obj gets a mouseup"},{"name":"removeFromGroup","doc":"Remove's this instance from the supplied interaction group"},{"name":"removeInvalidHandleClass","doc":"Unsets an invalid css class"},{"name":"removeInvalidHandleId","doc":"Unsets an invalid handle id"},{"name":"removeInvalidHandleType","doc":"Unsets an excluded tag name set by addInvalidHandleType"},{"name":"resetConstraints","doc":"resetConstraints must be called if you manually reposition a dd element."},{"name":"setDelta","doc":"Sets the pointer offset.  You can call this directly to force the\noffset to be in a particular lo..."},{"name":"setDragElId","doc":"Allows you to specify that an element other than the linked element\nwill be moved with the cursor..."},{"name":"setDragElPos","doc":"Sets the drag element to the location of the mousedown or click event,\nmaintaining the cursor loc..."},{"name":"setHandleElId","doc":"Allows you to specify a child of the linked element that should be\nused to initiate the drag oper..."},{"name":"setInitPosition","doc":"Stores the initial placement of the linked element."},{"name":"setOuterHandleElId","doc":"Allows you to set an element outside of the linked element as a drag\nhandle"},{"name":"setPadding","doc":"Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual o..."},{"name":"setXConstraint","doc":"By default, the element can be dragged any place on the screen.  Use\nthis method to limit the hor..."},{"name":"setYConstraint","doc":"By default, the element can be dragged any place on the screen.  Set\nthis to limit the vertical t..."},{"name":"startDrag","doc":"Abstract method called after a drag\/drop object is clicked\nand the drag or mousedown time thresho..."},{"name":"toString","doc":"toString method"},{"name":"unlock","doc":"Unlock this instace"},{"name":"unreg","doc":"Remove all drag and drop hooks for this element"}],"events":[]}