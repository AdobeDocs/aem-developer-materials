{"name":"CQ_Analytics.ClientContextMgr","doc":"The CQ_Analytics.ClientContextMgr object is a singleton providing methods for registration,\npersi...","configs":[],"props":[{"name":"CONFIG_PATH","doc":"&lt;static&gt; Location of the config."}],"methods":[{"name":"addInitProperty","doc":"Adds an initial property to the store."},{"name":"addListener","doc":"Appends an event handler to the current Observable."},{"name":"clear","doc":"Clears the store."},{"name":"get","doc":"Returns the current clientcontext object. Object can contain the non server persited data."},{"name":"getConfig","doc":"Returns the config object."},{"name":"getData","doc":"Returns the store data."},{"name":"getEditConfig","doc":"Returns the edit config object for the give store name.\nShortcut to config[\"configs\"][storename][..."},{"name":"getId","doc":"Returns the current clientcontext ID. Can be either: \nvisitor ID if defined\nsession unique ID in ..."},{"name":"getInitProperty","doc":"Returns the value of an initial property."},{"name":"getInitialData","doc":"Returns the initial data for the give store name.\nShortcut to config[\"data\"][storename]."},{"name":"getLabel","doc":"Returns a store property friendly label."},{"name":"getLink","doc":"Returns a store property in a link format."},{"name":"getName","doc":"Returns the store name."},{"name":"getProperty","doc":"Returns the value of a store property (XSS filtered value)."},{"name":"getPropertyNames","doc":"Returns all store property names."},{"name":"getRegisteredStore","doc":"Returns the registered store looked up by name."},{"name":"getSessionId","doc":"Returns the unique session ID."},{"name":"getSessionStore","doc":"Returns the session store attached to the current object (returns this)."},{"name":"getStoreConfig","doc":"Returns the store config object for the give store name.\nShortcut to config[\"configs\"][storename]..."},{"name":"getStoreKey","doc":"Returns the store key name used by persistence."},{"name":"getStores","doc":"Returns the registered stores."},{"name":"getUIConfig","doc":"Returns the UI config object for the give store name.\nShortcut to config[\"configs\"][storename][\"u..."},{"name":"getVisitorId","doc":"Returns the visitor ID if defined."},{"name":"init","doc":"Initializes the store."},{"name":"isAnonymous","doc":"Returns if manager is still defined in anonymous mode (no visitor id defined)."},{"name":"isInitialized","doc":"Returns true if the store is initialized. False otherwise."},{"name":"isMode","doc":"Returns if mode is defined."},{"name":"isPersisted","doc":"Returns if a property in persisted or not."},{"name":"loadConfig","doc":"Loads the config and fires configloaded and storesloaded events."},{"name":"loadInitProperties","doc":"Loads initial properties from an object."},{"name":"onReady","doc":"Executes the callback when the current ClientContextMgr is ready, i.e. when all stores are loaded."},{"name":"persist","doc":"Persists the store. All properties will be persisted as property=value using a CQ_Analytics.Sessi..."},{"name":"post","doc":"Posts the current clientcontext object to the server (occurs only if posting is started)."},{"name":"register","doc":"Registers a session store. The current ClickstreamcloudManager will handle its own persistence st..."},{"name":"removeListener","doc":"Removes an event handler from the current Observable."},{"name":"removeProperty","doc":"Removes a property from the store."},{"name":"reset","doc":"Resets the store: restores initial values."},{"name":"setNonPersisted","doc":"Defines a property as non persited. By default all properties are persisted."},{"name":"setProperties","doc":"Sets the value of multiple properties"},{"name":"setProperty","doc":"Sets the value of a property."},{"name":"setSuppressEvents","doc":"Sets the value of the suppressEvents property"},{"name":"setVisitorId","doc":"Sets the visitor ID."},{"name":"startPosting","doc":"Starts the posting."},{"name":"stopPosting","doc":"Stops the posting."},{"name":"update","doc":"Updates a session store. The current registred session store with the same name is updated by the..."}],"events":[]}