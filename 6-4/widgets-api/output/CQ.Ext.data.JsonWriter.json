{"name":"CQ.Ext.data.JsonWriter","doc":"DataWriter extension for writing an array or single CQ.Ext.data.Record object(s) in preparation f...","configs":[{"name":"createRecord","doc":"Abstract method that should be implemented in all subclasses (e.g.: JsonWriter.createRecord)"},{"name":"destroyRecord","doc":"Abstract method that should be implemented in all subclasses (e.g.: JsonWriter.destroyRecord)"},{"name":"encode","doc":"true to JSON encode the hashed data into a standard HTTP parameter named after this Reader's meta..."},{"name":"encodeDelete","doc":"False to send only the id to the server on delete, true to encode it in an object literal, eg: {i..."},{"name":"listful","doc":"false by default. Set true to have the DataWriter always write HTTP params as a list, even when a..."},{"name":"updateRecord","doc":"Abstract method that should be implemented in all subclasses (e.g.: JsonWriter.updateRecord"},{"name":"writeAllFields","doc":"false by default. Set true to have DataWriter return ALL fields of a modified record -- not just ..."}],"props":[{"name":"render","doc":"abstract method meant to be overridden by all DataWriter extensions.  It's the extension's job to..."}],"methods":[{"name":"apply","doc":"Compiles a Store recordset into a data-format defined by an extension such as CQ.Ext.data.JsonWri..."},{"name":"createRecord","doc":"Implements abstract CQ.Ext.data.DataWriter#createRecord\n@protected"},{"name":"destroyRecord","doc":"Implements abstract CQ.Ext.data.DataWriter#destroyRecord\n@protected"},{"name":"render","doc":"This method should not need to be called by application code, however it may be useful on occasio..."},{"name":"toArray","doc":"Converts a Hashed CQ.Ext.data.Record to fields-array array suitable\nfor encoding to xml via XTemp..."},{"name":"toHash","doc":"Converts a Record to a hash, taking into account the state of the CQ.Ext.data.Record along with c..."},{"name":"updateRecord","doc":"Implements abstract CQ.Ext.data.DataWriter#updateRecord\n@protected"}],"events":[]}