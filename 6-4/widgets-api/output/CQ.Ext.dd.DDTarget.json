{"name":"CQ.Ext.dd.DDTarget","doc":"A DragDrop implementation that does not move, but can be a drop\ntarget.  You would get the same r...","configs":[],"props":[{"name":"available","doc":"The available property is false until the linked dom element is accessible."},{"name":"config","doc":"Configuration attributes passed into the constructor"},{"name":"defaultPadding","doc":"Provides default constraint padding to \"constrainTo\" elements (defaults to {left: 0, right:0, top..."},{"name":"groups","doc":"The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get ..."},{"name":"hasOuterHandles","doc":"By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element ..."},{"name":"id","doc":"\nThe id of the element associated with this object.  This is what we\nrefer to as the \"linked elem..."},{"name":"ignoreSelf","doc":"Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element...."},{"name":"invalidHandleClasses","doc":"An Array of CSS class names for elements to be considered in valid as drag handles."},{"name":"invalidHandleIds","doc":"An object who's property names identify the IDs of elements to be considered invalid as drag hand..."},{"name":"invalidHandleTypes","doc":"An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non..."},{"name":"isTarget","doc":"By default, all instances can be a drop target.  This can be disabled by\nsetting isTarget to false."},{"name":"maintainOffset","doc":"Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element..."},{"name":"moveOnly","doc":"When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events whe..."},{"name":"padding","doc":"The padding configured for this drag and drop object for calculating\nthe drop zone intersection w..."},{"name":"primaryButtonOnly","doc":"By default the drag and drop instance will only respond to the primary\nbutton click (left button ..."},{"name":"xTicks","doc":"Array of pixel locations the element will snap to if we specified a\nhorizontal graduation\/interva..."},{"name":"yTicks","doc":"Array of pixel locations the element will snap to if we specified a\nvertical graduation\/interval...."}],"methods":[{"name":"addToGroup","doc":"Add this instance to a group of related drag\/drop objects.  All\ninstances belong to at least one ..."},{"name":"applyConfig","doc":"Applies the configuration parameters that were passed into the constructor.\nThis is supposed to h..."},{"name":"constrainTo","doc":"Initializes the drag drop object's constraints to restrict movement to a certain element.\nUsage:\r..."},{"name":"getEl","doc":"Returns a reference to the linked element"},{"name":"init","doc":"Sets up the DragDrop object.  Must be called in the constructor of any\nCQ.Ext.dd.DragDrop subclass"},{"name":"initTarget","doc":"Initializes Targeting functionality only... the object does not\nget a mousedown handler."},{"name":"isLocked","doc":"Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag\/dr..."},{"name":"lock","doc":"Lock this instance"},{"name":"onAvailable","doc":"Override the onAvailable method to do what is needed after the initial\nposition was determined."},{"name":"removeFromGroup","doc":"Remove's this instance from the supplied interaction group"},{"name":"setPadding","doc":"Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual o..."},{"name":"toString","doc":"toString method"},{"name":"unlock","doc":"Unlock this instace"},{"name":"unreg","doc":"Remove all drag and drop hooks for this element"}],"events":[]}