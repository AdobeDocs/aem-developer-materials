{"name":"CQ.Ext.util.MixedCollection","doc":"A Collection class that maintains both numeric indexes and keys and exposes events.","configs":[{"name":"allowFunctions","doc":"Specify true if the addAll function should add function references to the collection. Defaults to..."}],"props":[{"name":"get","doc":"This method calls item().\nReturns the item associated with the passed key OR index. Key has prior..."}],"methods":[{"name":"add","doc":"Adds an item to the collection. Fires the add event when complete."},{"name":"addAll","doc":"Adds all elements of an Array or an Object to the collection."},{"name":"clear","doc":"Removes all items from the collection.  Fires the clear event when complete."},{"name":"clone","doc":"Creates a shallow copy of this collection"},{"name":"contains","doc":"Returns true if the collection contains the passed Object as an item."},{"name":"containsKey","doc":"Returns true if the collection contains the passed Object as a key."},{"name":"each","doc":"Executes the specified function once for every item in the collection, passing the following argu..."},{"name":"eachKey","doc":"Executes the specified function once for every key in the collection, passing each\nkey, and its a..."},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"filter","doc":"Filter the objects in this collection by a specific property.\nReturns a new collection that has b..."},{"name":"filterBy","doc":"Filter by a function. Returns a new collection that has been filtered.\nThe passed function will b..."},{"name":"find","doc":"Returns the first item in the collection which elicits a true return value from the\npassed select..."},{"name":"findIndex","doc":"Finds the index of the first matching object in this collection by a specific property\/value."},{"name":"findIndexBy","doc":"Find the index of the first matching object in this collection by a function.\nIf the function ret..."},{"name":"first","doc":"Returns the first item in the collection."},{"name":"getCount","doc":"Returns the number of items in the collection."},{"name":"getKey","doc":"MixedCollection has a generic way to fetch keys if you implement getKey.  The default implementat..."},{"name":"getRange","doc":"Returns a range of items in this collection"},{"name":"indexOf","doc":"Returns index within the collection of the passed Object."},{"name":"indexOfKey","doc":"Returns index within the collection of the passed key."},{"name":"insert","doc":"Inserts an item at the specified index in the collection. Fires the add event when complete."},{"name":"item","doc":"Returns the item associated with the passed key OR index.\nKey has priority over index.  This is t..."},{"name":"itemAt","doc":"Returns the item at the specified index."},{"name":"key","doc":"Returns the item associated with the passed key."},{"name":"keySort","doc":"Sorts this collection by keys."},{"name":"last","doc":"Returns the last item in the collection."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"remove","doc":"Remove an item from the collection."},{"name":"removeAt","doc":"Remove an item from a specified index in the collection. Fires the remove event when complete."},{"name":"removeKey","doc":"Removed an item associated with the passed key fom the collection."},{"name":"reorder","doc":"Reorders each of the items based on a mapping from old index to new index. Internally this\njust t..."},{"name":"replace","doc":"Replaces an item in the collection. Fires the replace event when complete."},{"name":"sort","doc":"Sorts this collection by item value with the passed comparison function."}],"events":[{"name":"add","doc":"Fires when an item is added to the collection."},{"name":"clear","doc":"Fires when the collection is cleared."},{"name":"remove","doc":"Fires when an item is removed from the collection."},{"name":"replace","doc":"Fires when an item is replaced in the collection."}]}