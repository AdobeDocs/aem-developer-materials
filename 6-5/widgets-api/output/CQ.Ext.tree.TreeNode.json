{"name":"CQ.Ext.tree.TreeNode","doc":"","configs":[{"name":"allowChildren","doc":"False to not allow this node to have child nodes (defaults to true)"},{"name":"allowDrag","doc":"False to make this node undraggable if draggable = true (defaults to true)"},{"name":"allowDrop","doc":"False if this node cannot have child nodes dropped on it (defaults to true)"},{"name":"checked","doc":"True to render a checked checkbox for this node, false to render an unchecked checkbox (defaults ..."},{"name":"cls","doc":"A css class to be added to the node"},{"name":"disabled","doc":"true to start the node disabled"},{"name":"draggable","doc":"True to make this node draggable (defaults to false)"},{"name":"editable","doc":"False to not allow this node to be edited by an CQ.Ext.tree.TreeEditor (defaults to true)"},{"name":"expandable","doc":"If set to true, the node will always show a plus\/minus icon, even when empty"},{"name":"expanded","doc":"true to start the node expanded"},{"name":"hidden","doc":"True to render hidden. (Defaults to false)."},{"name":"href","doc":"URL of the link used for the node (defaults to #)"},{"name":"hrefTarget","doc":"target frame for the link"},{"name":"icon","doc":"The path to an icon for the node. The preferred way to do this is to use the cls or iconCls attri..."},{"name":"iconCls","doc":"A css class to be added to the nodes icon element for applying css background images"},{"name":"id","doc":"The id for this node. If one is not specified, one is generated."},{"name":"isTarget","doc":"False to not allow this node to act as a drop target (defaults to true)"},{"name":"leaf","doc":"true if this node is a leaf and does not have children"},{"name":"qtip","doc":"An Ext QuickTip for the node"},{"name":"qtipCfg","doc":"An Ext QuickTip config for the node (used instead of qtip)"},{"name":"singleClickExpand","doc":"True for single click expand on this node"},{"name":"text","doc":"The text for this node"},{"name":"uiProvider","doc":"A UI class to use for this node (defaults to CQ.Ext.tree.TreeNodeUI)"}],"props":[{"name":"attributes","doc":"The attributes supplied for the node. You can use this property to access any custom attributes y..."},{"name":"childNodes","doc":"All child nodes of this node."},{"name":"disabled","doc":"True if this node is disabled."},{"name":"firstChild","doc":"The first direct child node of this node, or null if this node has no child nodes."},{"name":"hidden","doc":"True if this node is hidden."},{"name":"id","doc":"The node id."},{"name":"lastChild","doc":"The last direct child node of this node, or null if this node has no child nodes."},{"name":"nextSibling","doc":"The node immediately following this node in the tree, or null if there is no sibling node."},{"name":"parentNode","doc":"The parent node for this node."},{"name":"previousSibling","doc":"The node immediately preceding this node in the tree, or null if there is no sibling node."},{"name":"text","doc":"Read-only. The text for this node. To change it use setText."},{"name":"ui","doc":"Read-only. The UI for this node"}],"methods":[{"name":"appendChild","doc":"Insert node(s) as the last child node of this node."},{"name":"bubble","doc":"Bubbles up the tree from this node, calling the specified function with each node. The arguments ..."},{"name":"cascade","doc":"Cascades down the tree from this node, calling the specified function with each node. The argumen..."},{"name":"collapse","doc":"Collapse this node."},{"name":"collapseChildNodes","doc":"Collapse all child nodes"},{"name":"contains","doc":"Returns true if this node is an ancestor (at any point) of the passed node."},{"name":"destroy","doc":"Destroys the node."},{"name":"disable","doc":"Disables this node"},{"name":"eachChild","doc":"Interates the child nodes of this node, calling the specified function with each node. The argume..."},{"name":"enable","doc":"Enables this node"},{"name":"enableBubble","doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubble..."},{"name":"ensureVisible","doc":"Ensures all parent nodes are expanded, and if necessary, scrolls\nthe node into view."},{"name":"expand","doc":"Expand this node."},{"name":"expandChildNodes","doc":"Expand all child nodes"},{"name":"findChild","doc":"Finds the first child that has the attribute with the specified value."},{"name":"findChildBy","doc":"Finds the first child by a custom function. The child matches if the function passed returns true."},{"name":"getDepth","doc":"Returns depth of this node (the root node has a depth of 0)"},{"name":"getOwnerTree","doc":"Returns the tree this node is in."},{"name":"getPath","doc":"Returns the path for this node. The path can be used to expand or select this node programmatically."},{"name":"getUI","doc":"Returns the UI object for this node."},{"name":"hasChildNodes","doc":"Returns true if this node has one or more child nodes, else false."},{"name":"indexOf","doc":"Returns the index of a child node"},{"name":"insertBefore","doc":"Inserts the first node before the second node in this nodes childNodes collection."},{"name":"isAncestor","doc":"Returns true if the passed node is an ancestor (at any point) of this node."},{"name":"isExpandable","doc":"Returns true if this node has one or more child nodes, or if the expandable\nnode attribute is exp..."},{"name":"isExpanded","doc":"Returns true if this node is expanded"},{"name":"isFirst","doc":"Returns true if this node is the first child of its parent"},{"name":"isLast","doc":"Returns true if this node is the last child of its parent"},{"name":"isLeaf","doc":"Returns true if this node is a leaf"},{"name":"isSelected","doc":"Returns true if this node is selected"},{"name":"item","doc":"Returns the child node at the specified index."},{"name":"relayEvents","doc":"Relays selected events from the specified Observable as if the events were fired by this."},{"name":"remove","doc":"Removes this node from its parent"},{"name":"removeAll","doc":"Removes all child nodes from this node."},{"name":"removeChild","doc":"Removes a child node from this node."},{"name":"replaceChild","doc":"Replaces one child node in this node with another."},{"name":"select","doc":"Triggers selection of this node"},{"name":"setCls","doc":"Sets the class on this node."},{"name":"setHref","doc":"Sets the href for the node."},{"name":"setIcon","doc":"Sets the icon for this node."},{"name":"setIconCls","doc":"Sets the icon class for this node."},{"name":"setId","doc":"Changes the id of this node."},{"name":"setText","doc":"Sets the text for this node"},{"name":"setTooltip","doc":"Sets the tooltip for this node."},{"name":"sort","doc":"Sorts this nodes children using the supplied sort function."},{"name":"toggle","doc":"Toggles expanded\/collapsed state of the node"},{"name":"unselect","doc":"Triggers deselection of this node"}],"events":[{"name":"append","doc":"Fires when a new child node is appended"},{"name":"beforeappend","doc":"Fires before a new child is appended, return false to cancel the append."},{"name":"beforechildrenrendered","doc":"Fires right before the child nodes for this node are rendered"},{"name":"beforeclick","doc":"Fires before click processing. Return false to cancel the default action."},{"name":"beforecollapse","doc":"Fires before this node is collapsed, return false to cancel."},{"name":"beforedblclick","doc":"Fires before double click processing. Return false to cancel the default action."},{"name":"beforeexpand","doc":"Fires before this node is expanded, return false to cancel."},{"name":"beforeinsert","doc":"Fires before a new child is inserted, return false to cancel the insert."},{"name":"beforemove","doc":"Fires before this node is moved to a new location in the tree. Return false to cancel the move."},{"name":"beforeremove","doc":"Fires before a child is removed, return false to cancel the remove."},{"name":"checkchange","doc":"Fires when a node with a checkbox's checked property changes"},{"name":"click","doc":"Fires when this node is clicked"},{"name":"collapse","doc":"Fires when this node is collapsed"},{"name":"contextmenu","doc":"Fires when this node is right clicked"},{"name":"dblclick","doc":"Fires when this node is double clicked"},{"name":"disabledchange","doc":"Fires when the disabled status of this node changes"},{"name":"expand","doc":"Fires when this node is expanded"},{"name":"insert","doc":"Fires when a new child node is inserted."},{"name":"move","doc":"Fires when this node is moved to a new location in the tree"},{"name":"remove","doc":"Fires when a child node is removed"},{"name":"textchange","doc":"Fires when the text for this node is changed"}]}